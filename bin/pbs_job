#!/usr/bin/env ruby
require "rubygems"
require 'thor'
require 'date'

module PbsJob
  class New < Thor::Group
    include Thor::Actions

    STREAMS_DIR_NAME = 'streams'
    EXECUTABLE_PERMISSIONS = 0775

    argument :name, :desc => 'Name of the new job.'
    argument :email_address, :desc => 'Email to which to send PBS alerts.'

    class_option(
      :link_results,
      {
        :desc => 'Directory to which to redirect results',
        :default => nil,
        :aliases => 'r'
      }
    )
    class_option(
      :script,
      {
        :desc => 'Type of script to make the task script',
        :default => '<script type>',
        :aliases => 's'
      }
    )

    def self.source_root
      File.expand_path('../../', __FILE__)
    end

    def gen_root
      empty_directory full_name
    end

    def qsub_script
      create_script_from_template 'job.qsub'
    end

    def pbs_script
      create_script_from_template 'job.pbs'
    end

    def task
      create_script_from_template 'task'
    end

    def results
      results_path = File.join full_name, 'results'
      if options[:link_results]
        create_link(results_path, options[:link_results])
      else
        empty_directory results_path
      end
    end

    def streams
      empty_directory streams_path
    end

    private

    def file_path(script_name)
      File.join full_name, script_name
    end

    def create_file_from_template(file_name)
      template(
        "templates/#{file_name}.tt",
        file_path(file_name)
      )
    end

    def create_script_from_template(script_name)
      create_file_from_template script_name
      chmod file_path(script_name), EXECUTABLE_PERMISSIONS
    end

    # @returns [String] Name with date appended
    def full_name
      @full_name ||= -> do
        today = Date.today
        month = Date::MONTHNAMES[today.month].downcase
        "#{name}.#{month}#{today.day}_#{today.year}"
      end.call
    end

    def abs_job_root
      @abs_job_root ||= File.expand_path(full_name)
    end

    def streams_path
      @streams_path ||= File.join full_name, STREAMS_DIR_NAME
    end

    def abs_stream_prefix
      @abs_stream_prefix ||= File.join abs_job_root, STREAMS_DIR_NAME, full_name
    end
  end

  class PbsJob < Thor
    map 'n' => :new

    register(
      New,
      'new',
      'new NAME EMAIL_ADDRESS [OPTIONS]',
      "Creates a new PBS job with the name NAME and arranges for PBS alerts to be sent to EMAIL_ADDRESS, customized by OPTIONS"
    )
    tasks["new"].options = New.class_options
  end
end

PbsJob::PbsJob.start(ARGV)