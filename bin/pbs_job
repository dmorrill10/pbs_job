#!/usr/bin/env ruby
require "rubygems"
require 'thor'
require 'date'

module PbsJob
  class Generate < Thor::Group
    include Thor::Actions

    argument :name, :type => :string, :desc => 'Name of the new job.'

    def self.source_root
      File.expand_path('../../', __FILE__)
    end

    def gen_root
      today = Date.today
      month = Date::MONTHNAMES[today.month].downcase

      @job_root = "#{name}.#{month}#{today.day}_#{today.year}"
      empty_directory @job_root
    end

    def qsub_script
      create_file_from_template 'job.qsub'
    end

    def pbs_script
      create_file_from_template 'job.pbs'
    end

    def task
      create_file_from_template 'task'
    end

    def results
      empty_directory "#{@job_root}/results"
    end

    def streams
      empty_directory "#{@job_root}/streams"
    end

    private

    def create_file_from_template(file_name)
      template(
        "templates/#{file_name}.tt",
        "#{@job_root}/#{file_name}"
      )
    end
  end

  class PbsJob < Thor
    map 'g' => :generate

    register(
      Generate,
      'generate',
      'generate NAME',
      "Generates a new PBS job with the name NAME"
    )
  end
end


  # < Thor::Group
  # include Thor::Actions

  # argument :name

  # def self.source_root
  #   File.dirname(__FILE__)
  # end

  # def create_lib_file
  #   template('templates/newgem.tt', "#{name}/lib/#{name}.rb")
  # end

  # def create_test_file
  #   test = options[:test_framework] == "rspec" ? :spec : :test
  #   create_file "#{name}/#{test}/#{name}_#{test}.rb"
  # endcl ../

  # def copy_licence
  #   if yes?("Use MIT license?")
  #     # Make a copy of the MITLICENSE file at the source root
  #     copy_file "MITLICENSE", "#{name}/MITLICENSE"
  #   else
  #     say "Shame on youâ€¦", :red
  #   end
  # end

PbsJob::PbsJob.start(ARGV)